/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2019 Andres Almiray.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java-library'
    id 'groovy'
    id 'org.kordamp.gradle.kordamp-parentpom'
    id 'org.codehaus.griffon.griffon'
}

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name          = 'GroovyConsoleFX'
        description   = 'GroovyConsole in JavaFX'
        inceptionYear = '2018'
        tags          = ['groovy', 'javafx']

        specification  { enabled = false }

        implementation { enabled = false }

        publishing { enabled = false }
    }

    stats {
        paths   = [
            model:      [name: 'Models',      path: 'griffon-app/models'],
            view:       [name: 'Views',       path: 'griffon-app/views'],
            controller: [name: 'Controllers', path: 'griffon-app/controllers'],
            service:    [name: 'Services',    path: 'griffon-app/services'],
            config:     [name: 'Config',      path: 'griffon-app/conf'],
            lifecycle:  [name: 'Lifecycle',   path: 'griffon-app/lifecycle'],
            mvc:        [name: 'MVCs',        path: 'griffon-app/mvcs']
        ]
    }
}

griffon {
    disableDependencyResolution = false
    includeGroovyDependencies   = true
    version                     = griffonVersion
    toolkit                     = 'javafx'
}

afterEvaluate {
    project.griffon.applicationProperties['build_date'] = project.extensions.findByName('effectiveConfig').buildInfo.buildDate
    project.griffon.applicationProperties['build_time'] = project.extensions.findByName('effectiveConfig').buildInfo.buildTime
    project.griffon.applicationProperties['build_revision'] = project.extensions.findByName('effectiveConfig').buildInfo.buildRevision
}

mainClassName = 'org.kordamp.groovy.console.Launcher'

dependencies {
    griffon "org.codehaus.griffon.plugins:griffon-miglayout-plugin:$miglayoutPluginVersion"

    api "org.codehaus.griffon:griffon-guice:$griffonVersion"

    api "com.miglayout:miglayout-javafx:$miglayoutVersion"
    api "org.kordamp.bootstrapfx:bootstrapfx-core:$bootstrapfxVersion"
    api "org.kordamp.ikonli:ikonli-javafx:$ikonliVersion"
    api "org.kordamp.ikonli:ikonli-materialdesign-pack:$ikonliVersion"

    api("org.fxmisc.richtext:richtextfx:$richtextfxVersion") {
        exclude group: 'org.reactfx', module: 'reactfx'
    }
    api("org.fxmisc.undo:undofx:$undofxVersion") {
        exclude group: 'org.reactfx', module: 'reactfx'
    }
    api "org.fxmisc.flowless:flowless:$flowlessVersion"
    api "org.fxmisc.wellbehaved:wellbehavedfx:$wellbehavedfxVersion"
    api "de.codecentric.centerdevice:centerdevice-nsmenufx:$nsmenufxVersion"

    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

    testImplementation "org.codehaus.griffon:griffon-javafx-test:$griffonVersion"
    testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation("org.awaitility:awaitility-groovy:$awaitilityVersion") {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    //functionalTestCompile 'junit:junit:4.12'
    //functionalTestCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    //functionalTestCompile "org.spockframework:spock-core:${spockVersion}"
}

sourceSets.main.groovy.srcDirs += ['griffon-app/mvcs']

configurations.all {
    resolutionStrategy.force "com.miglayout:miglayout-javafx:$miglayoutVersion",
        "com.miglayout:miglayout-core:$miglayoutVersion",
        "org.fxmisc.flowless:flowless:$flowlessVersion",
        "org.codehaus.griffon:griffon-javafx-groovy:$griffonVersion",
        "com.google.guava:guava:28.2-jre",
        "com.google.code.findbugs:jsr305:3.0.2",
        "org.codehaus.groovy:groovy-all:$groovyVersion",
        "org.codehaus.groovy:groovy:$groovyVersion",
        "org.codehaus.groovy:groovy-json:$groovyVersion",
        "org.codehaus.groovy:groovy-macro:$groovyVersion",
        "org.codehaus.groovy:groovy-nio:$groovyVersion",
        "org.codehaus.groovy:groovy-sql:$groovyVersion",
        "org.codehaus.groovy:groovy-templates:$groovyVersion",
        "org.codehaus.groovy:groovy-test:$groovyVersion",
        "org.codehaus.groovy:groovy-xml:$groovyVersion",
        "org.awaitility:awaitility:$awaitilityVersion",
        "org.slf4j:slf4j-api:$slf4jVersion"
}